System.register(["jimu-core"],(function(e,t){var o={};return{setters:[function(e){o.AbstractMessageAction=e.AbstractMessageAction,o.MessageType=e.MessageType,o.MutableStoreManager=e.MutableStoreManager,o.dataSourceUtils=e.dataSourceUtils,o.loadArcGISJSAPIModule=e.loadArcGISJSAPIModule}],execute:function(){e((()=>{"use strict";var e={9244:e=>{e.exports=o}},t={};function i(o){var l=t[o];if(void 0!==l)return l.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,i),r.exports}i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var l={};i.r(l),i.d(l,{default:()=>a});var r=i(9244);class a extends r.AbstractMessageAction{constructor(){super(...arguments),this.getLayerDisplayField=e=>{var t,o,i,l,r,a,n,s;return(null===(t=null==e?void 0:e.layer)||void 0===t?void 0:t.displayField)||(null===(o=null==e?void 0:e.layerDefinition)||void 0===o?void 0:o.displayField)||(null===(l=null===(i=null==e?void 0:e.belongToDataSource)||void 0===i?void 0:i.layerDefinition)||void 0===l?void 0:l.displayField)||(null===(r=null==e?void 0:e.layer)||void 0===r?void 0:r.objectIdField)||(null===(a=null==e?void 0:e.layerDefinition)||void 0===a?void 0:a.objectIdField)||(null===(s=null===(n=null==e?void 0:e.belongToDataSource)||void 0===n?void 0:n.layerDefinition)||void 0===s?void 0:s.objectIdField)||"OBJECTID"}}filterMessageDescription(e){return e.messageType===r.MessageType.DataRecordsSelectionChange}filterMessage(e){return!0}onExecute(e){if(e.type===r.MessageType.DataRecordsSelectionChange){const t=e,o=t.records&&t.records[0];if(o){const e=o.feature;r.dataSourceUtils.changeToJSAPIGraphic(e).then((e=>{(0,r.loadArcGISJSAPIModule)("esri/symbols/support/symbolUtils").then((t=>{t.getDisplayedSymbol(e).then((t=>{var o,i;if(e&&"polygon"===(null===(o=e.geometry)||void 0===o?void 0:o.type)){const o=e.geometry,i={type:"polygon",rings:o.rings,spatial:o.spatialReference,attributes:e.attributes?e.attributes:{},displayName:e.attributes[this.getLayerDisplayField(e)],symbol:t.toJSON()};r.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"workflowRuntimeSelectedFeatureObject",i)}else if(e&&"point"===(null===(i=e.geometry)||void 0===i?void 0:i.type)){const t=e.geometry;if(null!==t.latitude&&null!==t.latitude||null!==t.x&&null!==t.y){const o={latitude:t.latitude,longitude:t.longitude,geometry:t,type:"point",spatial:t.spatialReference,attributes:e.attributes?e.attributes:{},displayName:e.attributes[this.getLayerDisplayField(e)].toString()};r.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"workflowRuntimeSelectedFeatureObject",o)}}}))}))}))}}return Promise.resolve(!0)}}return l})())}}}));